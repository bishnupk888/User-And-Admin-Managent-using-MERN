import mongoose from "mongoose";
import bcrypt from "bcrypt"


const adminSchema = mongoose.Schema({
    name:{
        type:String,
        required : true
    },
    email:{
        type: String,
        required: true,
        unique : true
    },
    password :{
        type:String,
        required : true
    },
},{
    timestamp : true
}
)

adminSchema.pre('save', async function(next){
    if( !this.isModified('password') ) {

        next();
        // in that case rehashing password will be skipped
    }

    const salt = await bcrypt.genSalt(10);

    // Hashing the new password using the salt generated by bcrypt
    this.password = await bcrypt.hash(this.password, salt);
})

adminSchema.methods.matchPassword = async function (adminProvidedPassword) {

    const validPassword = await bcrypt.compare(adminProvidedPassword, this.password);

    return validPassword;
};

const Admin = mongoose.model('Admin', adminSchema);

export default Admin;